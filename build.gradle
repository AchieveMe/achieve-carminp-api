buildscript {
    ext {
        springBootVersion = '1.3.0.M2'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
    }
}

plugins {
	id 'java'
	id 'eclipse'
	id 'idea'
	id 'org.flywaydb.flyway' version '3.2.1'
}

apply plugin: 'spring-boot'

jar {
    baseName = 'carminp-core'
    version = '0.0.1-SNAPSHOT'
}

flyway {
    url = 'jdbc:postgresql://localhost:5432/carminp'
    schemas = ['carminp']
}

test {
	forkEvery = 5
	maxParallelForks = Runtime.runtime.availableProcessors() / 2
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}


dependencies {
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile("org.springframework.boot:spring-boot-starter-hateoas")
    compile("org.springframework.boot:spring-boot-starter-jersey")
    compile("com.h2database:h2")
    compile("org.postgresql:postgresql:9.4-1201-jdbc41")
    testCompile("org.springframework.boot:spring-boot-starter-test") 
}


eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task myJavadocs(type: Javadoc) {
    failOnError = false
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
